{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "AxisHorizontal.svelte",
    "AxisVertical.svelte",
    "Tooltip.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import * as d3 from \"d3\";\r\n  import AxisHorizontal from \"./AxisHorizontal.svelte\";\r\n  import AxisVertical from \"./AxisVertical.svelte\";\r\n  import Tooltip from \"./Tooltip.svelte\";\r\n  import { inview } from \"svelte-inview\";\r\n\r\n  // access data\r\n  let data = [];\r\n  d3.csv(\r\n    \"https://raw.githubusercontent.com/the-pudding/data/master/mars-weather/mars-weather.csv\"\r\n  ).then(res => {\r\n    data = res.slice(0, 100);\r\n  });\r\n\r\n  let yMetric = \"max_temp\";\r\n\r\n  const xAccessor = d => new Date(d.terrestrial_date);\r\n  $: yAccessor = d => parseInt(d[yMetric]);\r\n\r\n  // create chart dimensions\r\n  let margin = {\r\n    left: 30,\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 30\r\n  };\r\n  let width = 400;\r\n  let height = 300;\r\n  $: boundsWidth = width - margin.left - margin.right;\r\n  $: boundsHeight = height - margin.top - margin.bottom;\r\n\r\n  // create scales\r\n  let specifiedXRange = null;\r\n  $: xScale = d3\r\n    .scaleTime()\r\n    .domain(d3.extent(data, xAccessor))\r\n    .range(specifiedXRange || [0, boundsWidth]);\r\n\r\n  $: yScale = d3\r\n    .scaleLinear()\r\n    .domain(d3.extent(data, yAccessor))\r\n    .range([boundsHeight, 0])\r\n    .nice(true);\r\n\r\n  // set up interactions\r\n  let hoveredPoint = null;\r\n  $: quadtree = d3\r\n    .quadtree()\r\n    .x(d => xScale(xAccessor(d)))\r\n    .y(d => yScale(yAccessor(d)))\r\n    .addAll(data);\r\n</script>\r\n\r\n\r\n<div class=\"scroll-section\"\r\n  use:inview\r\n  on:enter={(event) => {\r\n    // show the min_temp property on the y axis\r\n\r\n}}>\r\n  Minimum temperature\r\n</div>\r\n\r\n<div class=\"scroll-section\"\r\n  use:inview\r\n  on:enter={(event) => {\r\n    // show the max_temp property on the y axis\r\n\r\n}}>\r\n  Maximum temperature\r\n</div>\r\n\r\n<div class=\"scroll-section\"\r\n  use:inview\r\n  on:enter={(event) => {\r\n    // set the tooltip to show the first data point\r\n\r\n}}>\r\n  First data point\r\n</div>\r\n\r\n<div class=\"scroll-section\"\r\n  use:inview\r\n  on:enter={(event) => {\r\n    // make the bounds 2000px wide\r\n    // hint: you might need to make a new variable within the <script/>\r\n    // hint: you also have access to a \"leave\" event\r\n\r\n  }}\r\n>\r\n  Zoom in on the start of the data\r\n</div>\r\n\r\n<div class=\"fixed\">\r\n  <h2>Weather on Mars over time</h2>\r\n\r\n  <figure>\r\n    <div class=\"wrapper\" bind:clientWidth={width} bind:clientHeight={height}>\r\n      <svg width={width} height={height}>\r\n        <g transform=\"translate({margin.left}, {margin.top})\">\r\n\r\n          {#each data as d,i (d.id)}\r\n            <circle\r\n              cx={xScale(xAccessor(d))}\r\n              cy={yScale(yAccessor(d))}\r\n              r=\"5\"\r\n              style=\"\r\n                transition: all 0.3s;\r\n              \"\r\n              fill={hoveredPoint === d ? \"skyblue\" : \"sienna\"}\r\n              stroke={hoveredPoint === d ? \"black\" : \"none\"}\r\n            />\r\n          {/each}\r\n\r\n          <rect\r\n            width={boundsWidth}\r\n            height={boundsHeight}\r\n            fill=\"transparent\"\r\n            on:mousemove={e => {\r\n              const pos = d3.pointer(e)\r\n              const x = pos[0]\r\n              const y = pos[1]\r\n              const closestPoint = quadtree.find(x, y)\r\n              if (!closestPoint) return\r\n              const hoveredPointPosition = [\r\n                xScale(xAccessor(closestPoint)),\r\n                yScale(yAccessor(closestPoint))\r\n              ]\r\n              // don't highlight if too far away\r\n              // a^2 + b^2 = c^2\r\n              const distance = Math.sqrt(\r\n                (x - hoveredPointPosition[0]) ** 2\r\n                + (y - hoveredPointPosition[1]) ** 2\r\n              )\r\n              if (distance < 50) {\r\n                hoveredPoint = closestPoint\r\n              } else {\r\n                hoveredPoint = null\r\n              }\r\n            }}\r\n          />\r\n\r\n        </g>\r\n        <g transform=\"translate({margin.left}, {boundsHeight + margin.top})\">\r\n          <AxisHorizontal\r\n            scale={xScale}\r\n            count=\"5\"\r\n            format={d3.timeFormat(\"%-m/%Y\")}\r\n          />\r\n        </g>\r\n        <g transform=\"translate({margin.left}, 0)\">\r\n          <AxisVertical\r\n            count=\"5\"\r\n            scale={yScale}\r\n          />\r\n        </g>\r\n      </svg>\r\n      <div\r\n        class=\"label\"\r\n        style=\"transform: translate({margin.left + 6}px, -10px)\">\r\n        {yMetric}\r\n      </div>\r\n\r\n      {#if hoveredPoint}\r\n        <Tooltip\r\n          x={margin.left + xScale(xAccessor(hoveredPoint))}\r\n          y={margin.top + yScale(yAccessor(hoveredPoint))}\r\n          placement={[\r\n            xScale(xAccessor(hoveredPoint)) > boundsWidth - 50 ? -90 : -50,\r\n            yScale(yAccessor(hoveredPoint)) < 80 ? 0 : -100,\r\n          ]}\r\n        >\r\n          <strong>\r\n            {d3.timeFormat(\"%b %-d, %Y\")(xAccessor(hoveredPoint))}\r\n          </strong>\r\n          <div>\r\n            max temp: {hoveredPoint.max_temp}Â°C\r\n          </div>\r\n        </Tooltip>\r\n      {/if}\r\n    </div>\r\n  </figure>\r\n</div>\r\n\r\n<style>\r\n  .fixed {\r\n    position: fixed;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    z-index: 1;\r\n  }\r\n  .scroll-section {\r\n    position: relative;\r\n    background: white;\r\n    margin-top: 90vh;\r\n    margin-bottom: 100vh;\r\n    border: 1px solid;\r\n    width: 10em;\r\n    padding: 0.5em 0.6em;\r\n    z-index: 10;\r\n  }\r\n\r\n  .wrapper {\r\n    position: relative;\r\n    margin: 0;\r\n    font-family: sans-serif;\r\n    width: 100%;\r\n    height: 300px;\r\n    min-width: 0;\r\n  }\r\n\r\n  svg {\r\n    overflow: visible;\r\n  }\r\n\r\n  h2 {\r\n    text-align: center;\r\n    font-family: sans-serif;\r\n  }\r\n\r\n  .label {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    max-width: 4em;\r\n    font-size: 0.6em;\r\n  }\r\n</style>",
    "<script>\r\n  export let scale;\r\n  export let count;\r\n  export let format = d => d;\r\n\r\n\t$: ticks = scale.ticks(count);\r\n</script>\r\n\r\n<line\r\n  x1={scale.range()[1]}\r\n  stroke=\"black\"\r\n/>\r\n{#each ticks as x}\r\n  <g transform=\"translate({scale(x)}, 0)\">\r\n    <text\r\n      y=\"10\"\r\n      text-anchor=\"middle\"\r\n      dominant-baseline=\"hanging\">\r\n      {format(x)}\r\n    </text>\r\n    <line\r\n      y1=\"5\"\r\n      stroke=\"black\"\r\n    />\r\n  </g>\r\n{/each}\r\n\r\n<style>\r\n\ttext {\r\n\t  font-size: 0.8em;\r\n\t}\r\n</style>",
    "<script>\r\n  export let scale;\r\n  export let count;\r\n  export let format = d => d;\r\n\r\n\t$: ticks = scale.ticks(count);\r\n</script>\r\n\r\n<line\r\n  y1={scale.range()[0]}\r\n  stroke=\"black\"\r\n/>\r\n{#each ticks as y}\r\n  <g transform=\"translate(0, {scale(y)})\">\r\n    <text\r\n      x=\"-10\"\r\n      text-anchor=\"end\"\r\n      dominant-baseline=\"middle\">\r\n      {format(y)}\r\n    </text>\r\n\r\n    <line\r\n      x1=\"-5\"\r\n      stroke=\"black\"\r\n    />\r\n  </g>\r\n{/each}\r\n\r\n<style>\r\n\ttext {\r\n\t  font-size: 0.8em;\r\n\t}\r\n</style>",
    "<script>\r\n  export let x;\r\n  export let y;\r\n  // let's set its placement using [xOffset, yOffset]\r\n  export let placement = [-50, -100];\r\n\r\n  $: side = placement[1] > -50 ? \"bottom\" : \"top\"\r\n  $: arrowTransform = {\r\n    top: \"translate(-50%, -100%)\",\r\n    bottom: \"translate(-50%, 0) rotate(180deg)\",\r\n  }[side]\r\n\r\n</script>\r\n\r\n<div\r\n  class=\"wrapper\"\r\n  style=\"transform: translate({x}px, {y}px)\">\r\n  <div class=\"tooltip-wrapper\"\r\n    style=\"transform: translate({placement[0]}%, {placement[1]}%)\">\r\n    <div class=\"tooltip\">\r\n      <slot />\r\n    </div>\r\n  </div>\r\n  <svg\r\n    class=\"arrow\"\r\n    style=\"transform: {arrowTransform}\">\r\n    <path d=\"M 0 0 L 6 6 L 12 0\" fill=\"white\" stroke=\"black\" />\r\n  </svg>\r\n</div>\r\n\r\n<style>\r\n  .wrapper {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 10;\r\n    /* don't capture mouse events */\r\n    pointer-events: none;\r\n  }\r\n  .tooltip-wrapper {\r\n    position: absolute;\r\n    /* make space for the arrow */\r\n    padding: 5px;\r\n    z-index: 1;\r\n  }\r\n  .arrow {\r\n    position: absolute;\r\n    height: 6px;\r\n    width: 12px;\r\n    /* keep arrow on top, to cover border */\r\n    z-index: 2;\r\n  }\r\n  .tooltip {\r\n    padding: 0.5em;\r\n    background: white;\r\n    min-width: 8em;\r\n    text-align: center;\r\n    font-size: 0.7em;\r\n    border: 1px solid;\r\n    box-shadow: 0 13px 27px -5px rgba(50,50,93,0.25),0 8px 16px -8px rgba(0,0,0,0.3);\r\n  }\r\n</style>"
  ],
  "names": [],
  "mappings": "AA0LE,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,eAAe,eAAC,CAAC,AACf,QAAQ,CAAE,QAAQ,CAClB,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,KAAK,CACpB,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CAAC,KAAK,CACpB,OAAO,CAAE,EAAE,AACb,CAAC,AAED,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,WAAW,CAAE,UAAU,CACvB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,KAAK,CACb,SAAS,CAAE,CAAC,AACd,CAAC,AAED,GAAG,eAAC,CAAC,AACH,QAAQ,CAAE,OAAO,AACnB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,UAAU,AACzB,CAAC,AAED,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,GAAG,CACd,SAAS,CAAE,KAAK,AAClB,CAAC;ACzMF,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,KAAK,AAClB,CAAC;ACDD,IAAI,eAAC,CAAC,AACJ,SAAS,CAAE,KAAK,AAClB,CAAC;ACAA,QAAQ,eAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,EAAE,CAEX,cAAc,CAAE,IAAI,AACtB,CAAC,AACD,gBAAgB,eAAC,CAAC,AAChB,QAAQ,CAAE,QAAQ,CAElB,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,MAAM,eAAC,CAAC,AACN,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,GAAG,CACX,KAAK,CAAE,IAAI,CAEX,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,UAAU,CAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAClF,CAAC"
}